# Generated by Django 2.2.1 on 2019-06-01 15:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(help_text='The message of the contact request.', max_length=500)),
                ('email', models.EmailField(blank=True, help_text='The email address of the contact request sender (optional).', max_length=254, null=True, verbose_name='email address')),
                ('time', models.DateTimeField(auto_now_add=True, help_text='Time and date when the contact request was created.')),
                ('seen', models.BooleanField(default=False, help_text='A flag indicating whether the club officers have seen this contact request.')),
            ],
            options={
                'ordering': ['seen', 'time'],
            },
        ),
        migrations.CreateModel(
            name='ContactNotificant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='An email address of an officer wating to receive contact requests.', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='The email address of a Game Night member.', max_length=254, unique=True)),
                ('name', models.CharField(help_text='The name attached to the email address.', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='GameOfWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.CharField(help_text='The name of the game of the week (max 100 characters).', max_length=100)),
                ('image', models.ImageField(help_text='The image of the game of the week (most file formats work, please try to keep the file small).', upload_to='')),
                ('time', models.DateTimeField(help_text='The time and date the game will be shown.')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(help_text='The name of the location.', max_length=200)),
                ('latitude', models.FloatField(help_text='The latitude in degrees (must be between -90 and 90).', validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(help_text='The longitude in degrees (must be between -180 and 180).', validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
            ],
        ),
        migrations.CreateModel(
            name='MassEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(help_text='The subject line for the mass email (max 200 characters).', max_length=200)),
                ('content', models.CharField(help_text='The HTML content for the mass email.', max_length=2000)),
                ('last_edit', models.DateTimeField(help_text='The time of the last edit of the mass email.')),
                ('is_sent', models.BooleanField(default=False, help_text='A flag indicating whether the mass email was sent out.')),
                ('editor', models.ForeignKey(blank=True, help_text='The user who last edited the mass email.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['last_edit'],
                'permissions': (('can_send_emails', 'Abilty to send club emails'),),
            },
        ),
        migrations.CreateModel(
            name='QuoteOfDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote', models.CharField(help_text='The quote of the day (max 500 characters).', max_length=500)),
                ('speaker', models.CharField(help_text='The speaker of the quote.', max_length=200)),
                ('time', models.DateTimeField(help_text='The time and date the quote will be shown.')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='VideoOfDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(help_text='The link to the video of the day.', max_length=1000)),
                ('visible_text', models.CharField(help_text='The front page text that will contain the video link.', max_length=500)),
                ('description', models.CharField(blank=True, help_text='A description of the video (optional).', max_length=1000, null=True)),
                ('time', models.DateTimeField(help_text='The time and date the video will be shown.')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(help_text='The date and time of the meeting.')),
                ('name', models.CharField(blank=True, help_text='A custom name for the meeting (optional, max 100 characters).', max_length=100, null=True)),
                ('email', models.OneToOneField(blank=True, help_text='The mass email that is attached to this meeting. Leave blank when creating a new meeting.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.MassEmail')),
                ('location', models.ForeignKey(help_text='The location of the meeting.', on_delete=django.db.models.deletion.CASCADE, to='main.Location')),
            ],
            options={
                'ordering': ['time'],
            },
        ),
        migrations.CreateModel(
            name='GameScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(help_text='The score of the player after finishing a round of the space game.')),
                ('drifters', models.PositiveIntegerField(help_text='The number of drifters destroyed by the player after finishing a round of the space game.')),
                ('time', models.DateTimeField(auto_now_add=True, help_text='The time the player finished a round of the space game.')),
                ('player', models.ForeignKey(blank=True, help_text='The player of the round of the space game', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GameBring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.CharField(help_text='Enter the game to be brought (max 100 characters).', max_length=100)),
                ('person', models.CharField(blank=True, help_text='Enter the name of the person bringing the game (optional).', max_length=180, null=True)),
                ('meeting', models.ForeignKey(help_text='The meeting to which the game will be attached.', on_delete=django.db.models.deletion.CASCADE, to='main.Meeting')),
            ],
            options={
                'ordering': ['game'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(help_text='Enter an alert message (max 250 characters).', max_length=250)),
                ('time', models.DateTimeField(help_text='Enter the time and date when the alert should expire.')),
                ('severity', models.CharField(choices=[('1m', 'Message'), ('2a', 'Alert'), ('3w', 'Warning')], default='2a', help_text='Determines the severity of the alert (which changes the banner appearance).', max_length=2)),
                ('seen', models.ManyToManyField(blank=True, help_text='List of users who have seen the alert. Leave blank if creating an alert.', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-severity', 'time'],
            },
        ),
    ]
